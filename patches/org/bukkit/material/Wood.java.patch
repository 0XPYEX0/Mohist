--- ../src-base/minecraft/org/bukkit/material/Wood.java
+++ ../src-work/minecraft/org/bukkit/material/Wood.java
@@ -23,7 +23,7 @@
 
     /**
      * Constructs a wood block of the given tree species.
-     * 
+     *
      * @param species the species of the wood block
      */
     public Wood(TreeSpecies species) {
@@ -34,7 +34,7 @@
      * @param type the raw type id
      * @deprecated Magic value
      */
-    @Deprecated
+
     public Wood(final int type) {
         super(type);
     }
@@ -65,7 +65,7 @@
      * @param data the raw data value
      * @deprecated Magic value
      */
-    @Deprecated
+
     public Wood(final int type, final byte data) {
         super(type, data);
     }
@@ -75,36 +75,12 @@
      * @param data the raw data value
      * @deprecated Magic value
      */
-    @Deprecated
+
     public Wood(final Material type, final byte data) {
         super(type, data);
     }
 
     /**
-     * Gets the current species of this wood block
-     *
-     * @return TreeSpecies of this wood block
-     */
-    public TreeSpecies getSpecies() {
-        switch (getItemType()) {
-            case WOOD:
-            case WOOD_DOUBLE_STEP:
-                return TreeSpecies.getByData((byte) getData());
-            case LOG:
-            case LEAVES:
-                return TreeSpecies.getByData((byte) (getData() & 0x3));
-            case LOG_2:
-            case LEAVES_2:
-                return TreeSpecies.getByData((byte) ((getData() & 0x3) | 0x4));
-            case SAPLING:
-            case WOOD_STEP:
-                return TreeSpecies.getByData((byte) (getData() & 0x7));
-            default:
-                throw new IllegalArgumentException("Invalid block type for tree species");
-        }
-    }
-
-    /**
      * Correct the block type for certain species-type combinations.
      *
      * @param type The desired type
@@ -140,6 +116,30 @@
     }
 
     /**
+     * Gets the current species of this wood block
+     *
+     * @return TreeSpecies of this wood block
+     */
+    public TreeSpecies getSpecies() {
+        switch (getItemType()) {
+            case WOOD:
+            case WOOD_DOUBLE_STEP:
+                return TreeSpecies.getByData((byte) getData());
+            case LOG:
+            case LEAVES:
+                return TreeSpecies.getByData((byte) (getData() & 0x3));
+            case LOG_2:
+            case LEAVES_2:
+                return TreeSpecies.getByData((byte) ((getData() & 0x3) | 0x4));
+            case SAPLING:
+            case WOOD_STEP:
+                return TreeSpecies.getByData((byte) (getData() & 0x7));
+            default:
+                throw new IllegalArgumentException("Invalid block type for tree species");
+        }
+    }
+
+    /**
      * Sets the species of this wood block
      *
      * @param species New species of this wood block
@@ -154,7 +154,7 @@
             case LOG:
             case LEAVES:
                 firstType = true;
-            // fall through to next switch statement below
+                // fall through to next switch statement below
             case LOG_2:
             case LEAVES_2:
                 switch (species) {
