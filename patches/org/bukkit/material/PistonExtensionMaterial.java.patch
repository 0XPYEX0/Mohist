--- ../src-base/minecraft/org/bukkit/material/PistonExtensionMaterial.java
+++ ../src-work/minecraft/org/bukkit/material/PistonExtensionMaterial.java
@@ -11,7 +11,7 @@
      * @param type the raw type id
      * @deprecated Magic value
      */
-    @Deprecated
+
     public PistonExtensionMaterial(final int type) {
         super(type);
     }
@@ -25,7 +25,7 @@
      * @param data the raw data value
      * @deprecated Magic value
      */
-    @Deprecated
+
     public PistonExtensionMaterial(final int type, final byte data) {
         super(type, data);
     }
@@ -35,7 +35,7 @@
      * @param data the raw data value
      * @deprecated Magic value
      */
-    @Deprecated
+
     public PistonExtensionMaterial(final Material type, final byte data) {
         super(type, data);
     }
@@ -44,21 +44,21 @@
         byte data = (byte) (getData() & 0x8);
 
         switch (face) {
-        case UP:
-            data |= 1;
-            break;
-        case NORTH:
-            data |= 2;
-            break;
-        case SOUTH:
-            data |= 3;
-            break;
-        case WEST:
-            data |= 4;
-            break;
-        case EAST:
-            data |= 5;
-            break;
+            case UP:
+                data |= 1;
+                break;
+            case NORTH:
+                data |= 2;
+                break;
+            case SOUTH:
+                data |= 3;
+                break;
+            case WEST:
+                data |= 4;
+                break;
+            case EAST:
+                data |= 5;
+                break;
         }
         setData(data);
     }
@@ -67,20 +67,20 @@
         byte dir = (byte) (getData() & 7);
 
         switch (dir) {
-        case 0:
-            return BlockFace.DOWN;
-        case 1:
-            return BlockFace.UP;
-        case 2:
-            return BlockFace.NORTH;
-        case 3:
-            return BlockFace.SOUTH;
-        case 4:
-            return BlockFace.WEST;
-        case 5:
-            return BlockFace.EAST;
-        default:
-            return BlockFace.SELF;
+            case 0:
+                return BlockFace.DOWN;
+            case 1:
+                return BlockFace.UP;
+            case 2:
+                return BlockFace.NORTH;
+            case 3:
+                return BlockFace.SOUTH;
+            case 4:
+                return BlockFace.WEST;
+            case 5:
+                return BlockFace.EAST;
+            default:
+                return BlockFace.SELF;
         }
     }
 
