--- ../src-base/minecraft/org/bukkit/CropState.java
+++ ../src-work/minecraft/org/bukkit/CropState.java
@@ -1,9 +1,8 @@
 package org.bukkit;
 
+import com.google.common.collect.Maps;
 import java.util.Map;
 
-import com.google.common.collect.Maps;
-
 /**
  * Represents the different growth states of crops
  */
@@ -42,25 +41,21 @@
      */
     RIPE(0x7);
 
-    private final byte data;
     private final static Map<Byte, CropState> BY_DATA = Maps.newHashMap();
 
+    static {
+        for (CropState cropState : values()) {
+            BY_DATA.put(cropState.getData(), cropState);
+        }
+    }
+
+    private final byte data;
+
     private CropState(final int data) {
         this.data = (byte) data;
     }
 
     /**
-     * Gets the associated data value representing this growth state
-     *
-     * @return A byte containing the data value of this growth state
-     * @deprecated Magic value
-     */
-    @Deprecated
-    public byte getData() {
-        return data;
-    }
-
-    /**
      * Gets the CropState with the given data value
      *
      * @param data Data value to fetch
@@ -68,14 +63,19 @@
      *     it doesn't exist
      * @deprecated Magic value
      */
-    @Deprecated
+
     public static CropState getByData(final byte data) {
         return BY_DATA.get(data);
     }
 
-    static {
-        for (CropState cropState : values()) {
-            BY_DATA.put(cropState.getData(), cropState);
-        }
+    /**
+     * Gets the associated data value representing this growth state
+     *
+     * @return A byte containing the data value of this growth state
+     * @deprecated Magic value
+     */
+
+    public byte getData() {
+        return data;
     }
 }
