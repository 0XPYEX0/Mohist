--- ../src-base/minecraft/org/bukkit/event/player/AsyncPlayerPreLoginEvent.java
+++ ../src-work/minecraft/org/bukkit/event/player/AsyncPlayerPreLoginEvent.java
@@ -1,8 +1,9 @@
 package org.bukkit.event.player;
 
+import com.destroystokyo.paper.profile.PlayerProfile;
 import java.net.InetAddress;
 import java.util.UUID;
-
+import org.bukkit.Bukkit;
 import org.bukkit.event.Event;
 import org.bukkit.event.HandlerList;
 
@@ -13,11 +14,12 @@
  */
 public class AsyncPlayerPreLoginEvent extends Event {
     private static final HandlerList handlers = new HandlerList();
-    private Result result;
-    private String message;
     private final String name;
     private final InetAddress ipAddress;
     private final UUID uniqueId;
+    private Result result;
+    private String message;
+    private PlayerProfile profile;
 
     @Deprecated
     public AsyncPlayerPreLoginEvent(final String name, final InetAddress ipAddress) {
@@ -25,7 +27,14 @@
     }
 
     public AsyncPlayerPreLoginEvent(final String name, final InetAddress ipAddress, final UUID uniqueId) {
+        // Paper start
+        this(name, ipAddress, uniqueId, Bukkit.createProfile(uniqueId, name));
+    }
+
+    public AsyncPlayerPreLoginEvent(final String name, final InetAddress ipAddress, final UUID uniqueId, PlayerProfile profile) {
         super(true);
+        this.profile = profile;
+        // Paper end
         this.result = Result.ALLOWED;
         this.message = "";
         this.name = name;
@@ -33,7 +42,27 @@
         this.uniqueId = uniqueId;
     }
 
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
     /**
+     * Gets the PlayerProfile of the player logging in
+     * @return The Profile
+     */
+    public PlayerProfile getPlayerProfile() {
+        return profile;
+    }
+
+    /**
+     * Changes the PlayerProfile the player will login as
+     * @param profile The profile to use
+     */
+    public void setPlayerProfile(PlayerProfile profile) {
+        this.profile = profile;
+    }
+
+    /**
      * Gets the current result of the login, as an enum
      *
      * @return Current Result of the login
@@ -43,6 +72,15 @@
     }
 
     /**
+     * Sets the new result of the login, as an enum
+     *
+     * @param result New result to set
+     */
+    public void setLoginResult(final Result result) {
+        this.result = result;
+    }
+
+    /**
      * Gets the current result of the login, as an enum
      *
      * @return Current Result of the login
@@ -59,15 +97,6 @@
      * Sets the new result of the login, as an enum
      *
      * @param result New result to set
-     */
-    public void setLoginResult(final Result result) {
-        this.result = result;
-    }
-
-    /**
-     * Sets the new result of the login, as an enum
-     *
-     * @param result New result to set
      * @deprecated This method uses a deprecated enum from {@link
      *     PlayerPreLoginEvent}
      * @see #setLoginResult(Result)
@@ -162,10 +191,6 @@
         return handlers;
     }
 
-    public static HandlerList getHandlerList() {
-        return handlers;
-    }
-
     /**
      * Basic kick reasons for communicating to plugins
      */
