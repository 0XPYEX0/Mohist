--- ../src-base/minecraft/org/bukkit/map/MapCursor.java
+++ ../src-work/minecraft/org/bukkit/map/MapCursor.java
@@ -18,7 +18,7 @@
      * @param visible Whether the cursor is visible by default.
      * @deprecated Magic value
      */
-    @Deprecated
+
     public MapCursor(byte x, byte y, byte direction, byte type, boolean visible) {
         this.x = x;
         this.y = y;
@@ -54,71 +54,42 @@
     }
 
     /**
-     * Get the Y position of this cursor.
+     * Set the X position of this cursor.
      *
-     * @return The Y coordinate.
+     * @param x The X coordinate.
      */
-    public byte getY() {
-        return y;
+    public void setX(byte x) {
+        this.x = x;
     }
 
     /**
-     * Get the direction of this cursor.
+     * Get the Y position of this cursor.
      *
-     * @return The facing of the cursor, from 0 to 15.
+     * @return The Y coordinate.
      */
-    public byte getDirection() {
-        return direction;
+    public byte getY() {
+        return y;
     }
 
     /**
-     * Get the type of this cursor.
+     * Set the Y position of this cursor.
      *
-     * @return The type (color/style) of the map cursor.
+     * @param y The Y coordinate.
      */
-    public Type getType() {
-        return Type.byValue(type);
+    public void setY(byte y) {
+        this.y = y;
     }
 
     /**
-     * Get the type of this cursor.
+     * Get the direction of this cursor.
      *
-     * @return The type (color/style) of the map cursor.
-     * @deprecated Magic value
+     * @return The facing of the cursor, from 0 to 15.
      */
-    @Deprecated
-    public byte getRawType() {
-        return type;
+    public byte getDirection() {
+        return direction;
     }
 
     /**
-     * Get the visibility status of this cursor.
-     *
-     * @return True if visible, false otherwise.
-     */
-    public boolean isVisible() {
-        return visible;
-    }
-
-    /**
-     * Set the X position of this cursor.
-     *
-     * @param x The X coordinate.
-     */
-    public void setX(byte x) {
-        this.x = x;
-    }
-
-    /**
-     * Set the Y position of this cursor.
-     *
-     * @param y The Y coordinate.
-     */
-    public void setY(byte y) {
-        this.y = y;
-    }
-
-    /**
      * Set the direction of this cursor.
      *
      * @param direction The facing of the cursor, from 0 to 15.
@@ -131,6 +102,15 @@
     }
 
     /**
+     * Get the type of this cursor.
+     *
+     * @return The type (color/style) of the map cursor.
+     */
+    public Type getType() {
+        return Type.byValue(type);
+    }
+
+    /**
      * Set the type of this cursor.
      *
      * @param type The type (color/style) of the map cursor.
@@ -140,12 +120,22 @@
     }
 
     /**
+     * Get the type of this cursor.
+     *
+     * @return The type (color/style) of the map cursor.
+     * @deprecated Magic value
+     */
+    public byte getRawType() {
+        return type;
+    }
+
+    /**
      * Set the type of this cursor.
      *
      * @param type The type (color/style) of the map cursor.
      * @deprecated Magic value
      */
-    @Deprecated
+
     public void setRawType(byte type) {
         if (type < 0 || type > 15) {
             throw new IllegalArgumentException("Type must be in the range 0-15");
@@ -154,6 +144,15 @@
     }
 
     /**
+     * Get the visibility status of this cursor.
+     *
+     * @return True if visible, false otherwise.
+     */
+    public boolean isVisible() {
+        return visible;
+    }
+
+    /**
      * Set the visibility status of this cursor.
      *
      * @param visible True if visible.
@@ -188,27 +187,29 @@
 
         /**
          *
-         * @return the value 
-         * @deprecated Magic value
-         */
-        @Deprecated
-        public byte getValue() {
-            return value;
-        }
-
-        /**
-         *
          * @param value the value
          * @return the matching type
          * @deprecated Magic value
          */
-        @Deprecated
+
         public static Type byValue(byte value) {
             for (Type t : values()) {
-                if (t.value == value) return t;
+                if (t.value == value) {
+                    return t;
+                }
             }
             return null;
         }
+
+        /**
+         *
+         * @return the value
+         * @deprecated Magic value
+         */
+
+        public byte getValue() {
+            return value;
+        }
     }
 
 }
