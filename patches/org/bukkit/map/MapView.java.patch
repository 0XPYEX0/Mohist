--- ../src-base/minecraft/org/bukkit/map/MapView.java
+++ ../src-work/minecraft/org/bukkit/map/MapView.java
@@ -9,53 +9,6 @@
 public interface MapView {
 
     /**
-     * An enum representing all possible scales a map can be set to.
-     */
-    public static enum Scale {
-        CLOSEST(0),
-        CLOSE(1),
-        NORMAL(2),
-        FAR(3),
-        FARTHEST(4);
-
-        private byte value;
-
-        private Scale(int value) {
-            this.value = (byte) value;
-        }
-
-        /**
-         * Get the scale given the raw value.
-         *
-         * @param value The raw scale
-         * @return The enum scale, or null for an invalid input
-         * @deprecated Magic value
-         */
-        @Deprecated
-        public static Scale valueOf(byte value) {
-            switch (value) {
-            case 0: return CLOSEST;
-            case 1: return CLOSE;
-            case 2: return NORMAL;
-            case 3: return FAR;
-            case 4: return FARTHEST;
-            default: return null;
-            }
-        }
-
-        /**
-         * Get the raw value of this scale level.
-         *
-         * @return The scale value
-         * @deprecated Magic value
-         */
-        @Deprecated
-        public byte getValue() {
-            return value;
-        }
-    }
-
-    /**
      * Get the ID of this map item. Corresponds to the damage value of a map
      * in an inventory.
      *
@@ -95,18 +48,18 @@
     public int getCenterX();
 
     /**
-     * Get the center Z position of this map.
+     * Set the center X position of this map.
      *
-     * @return The center Z position.
+     * @param x The center X position.
      */
-    public int getCenterZ();
+    public void setCenterX(int x);
 
     /**
-     * Set the center X position of this map.
+     * Get the center Z position of this map.
      *
-     * @param x The center X position.
+     * @return The center Z position.
      */
-    public void setCenterX(int x);
+    public int getCenterZ();
 
     /**
      * Set the center Z position of this map.
@@ -169,4 +122,57 @@
      * @param unlimited tracking state
      */
     void setUnlimitedTracking(boolean unlimited);
+
+    /**
+     * An enum representing all possible scales a map can be set to.
+     */
+    public static enum Scale {
+        CLOSEST(0),
+        CLOSE(1),
+        NORMAL(2),
+        FAR(3),
+        FARTHEST(4);
+
+        private byte value;
+
+        private Scale(int value) {
+            this.value = (byte) value;
+        }
+
+        /**
+         * Get the scale given the raw value.
+         *
+         * @param value The raw scale
+         * @return The enum scale, or null for an invalid input
+         * @deprecated Magic value
+         */
+        @Deprecated
+        public static Scale valueOf(byte value) {
+            switch (value) {
+                case 0:
+                    return CLOSEST;
+                case 1:
+                    return CLOSE;
+                case 2:
+                    return NORMAL;
+                case 3:
+                    return FAR;
+                case 4:
+                    return FARTHEST;
+                default:
+                    return null;
+            }
+        }
+
+        /**
+         * Get the raw value of this scale level.
+         *
+         * @return The scale value
+         * @deprecated Magic value
+         */
+        @Deprecated
+        public byte getValue() {
+            return value;
+        }
+    }
 }
