--- ../src-base/minecraft/org/bukkit/map/MapFont.java
+++ ../src-work/minecraft/org/bukkit/map/MapFont.java
@@ -9,8 +9,8 @@
 public class MapFont {
 
     private final HashMap<Character, CharacterSprite> chars = new HashMap<Character, CharacterSprite>();
-    private int height = 0;
     protected boolean malleable = true;
+    private int height = 0;
 
     /**
      * Set the sprite for a given character.
@@ -60,7 +60,9 @@
         int result = 0;
         for (int i = 0; i < text.length(); ++i) {
             char ch = text.charAt(i);
-            if (ch == ChatColor.COLOR_CHAR) continue;
+            if (ch == ChatColor.COLOR_CHAR) {
+                continue;
+            }
             result += chars.get(ch).getWidth();
         }
         result += text.length() - 1; // Account for 1px spacing between characters
@@ -87,8 +89,12 @@
     public boolean isValid(String text) {
         for (int i = 0; i < text.length(); ++i) {
             char ch = text.charAt(i);
-            if (ch == ChatColor.COLOR_CHAR || ch == '\n') continue;
-            if (chars.get(ch) == null) return false;
+            if (ch == ChatColor.COLOR_CHAR || ch == '\n') {
+                continue;
+            }
+            if (chars.get(ch) == null) {
+                return false;
+            }
         }
         return true;
     }
@@ -120,7 +126,9 @@
          * @return True if the pixel is solid, false if transparent.
          */
         public boolean get(int row, int col) {
-            if (row < 0 || col < 0 || row >= height || col >= width) return false;
+            if (row < 0 || col < 0 || row >= height || col >= width) {
+                return false;
+            }
             return data[row * width + col];
         }
 
