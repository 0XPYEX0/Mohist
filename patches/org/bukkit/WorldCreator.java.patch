--- ../src-base/minecraft/org/bukkit/WorldCreator.java
+++ ../src-work/minecraft/org/bukkit/WorldCreator.java
@@ -32,6 +32,60 @@
     }
 
     /**
+     * Creates a new {@link WorldCreator} for the given world name
+     *
+     * @param name Name of the world to load or create
+     * @return Resulting WorldCreator
+     */
+    public static WorldCreator name(String name) {
+        return new WorldCreator(name);
+    }
+
+    /**
+     * Attempts to get the {@link ChunkGenerator} with the given name.
+     * <p>
+     * If the generator is not found, null will be returned and a message will
+     * be printed to the specified {@link CommandSender} explaining why.
+     * <p>
+     * The name must be in the "plugin:id" notation, or optionally just
+     * "plugin", where "plugin" is the safe-name of a plugin and "id" is an
+     * optional unique identifier for the generator you wish to request from
+     * the plugin.
+     *
+     * @param world Name of the world this will be used for
+     * @param name Name of the generator to retrieve
+     * @param output Where to output if errors are present
+     * @return Resulting generator, or null
+     */
+    public static ChunkGenerator getGeneratorForName(String world, String name, CommandSender output) {
+        ChunkGenerator result = null;
+
+        if (world == null) {
+            throw new IllegalArgumentException("World name must be specified");
+        }
+
+        if (output == null) {
+            output = Bukkit.getConsoleSender();
+        }
+
+        if (name != null) {
+            String[] split = name.split(":", 2);
+            String id = (split.length > 1) ? split[1] : null;
+            Plugin plugin = Bukkit.getPluginManager().getPlugin(split[0]);
+
+            if (plugin == null) {
+                output.sendMessage("Could not set generator for world '" + world + "': Plugin '" + split[0] + "' does not exist");
+            } else if (!plugin.isEnabled()) {
+                output.sendMessage("Could not set generator for world '" + world + "': Plugin '" + plugin.getDescription().getFullName() + "' is not enabled");
+            } else {
+                result = plugin.getDefaultWorldGenerator(world, id);
+            }
+        }
+
+        return result;
+    }
+
+    /**
      * Copies the options from the specified world
      *
      * @param world World to copy options from
@@ -260,58 +314,4 @@
     public World createWorld() {
         return Bukkit.createWorld(this);
     }
-
-    /**
-     * Creates a new {@link WorldCreator} for the given world name
-     *
-     * @param name Name of the world to load or create
-     * @return Resulting WorldCreator
-     */
-    public static WorldCreator name(String name) {
-        return new WorldCreator(name);
-    }
-
-    /**
-     * Attempts to get the {@link ChunkGenerator} with the given name.
-     * <p>
-     * If the generator is not found, null will be returned and a message will
-     * be printed to the specified {@link CommandSender} explaining why.
-     * <p>
-     * The name must be in the "plugin:id" notation, or optionally just
-     * "plugin", where "plugin" is the safe-name of a plugin and "id" is an
-     * optional unique identifier for the generator you wish to request from
-     * the plugin.
-     *
-     * @param world Name of the world this will be used for
-     * @param name Name of the generator to retrieve
-     * @param output Where to output if errors are present
-     * @return Resulting generator, or null
-     */
-    public static ChunkGenerator getGeneratorForName(String world, String name, CommandSender output) {
-        ChunkGenerator result = null;
-
-        if (world == null) {
-            throw new IllegalArgumentException("World name must be specified");
-        }
-
-        if (output == null) {
-            output = Bukkit.getConsoleSender();
-        }
-
-        if (name != null) {
-            String[] split = name.split(":", 2);
-            String id = (split.length > 1) ? split[1] : null;
-            Plugin plugin = Bukkit.getPluginManager().getPlugin(split[0]);
-
-            if (plugin == null) {
-                output.sendMessage("Could not set generator for world '" + world + "': Plugin '" + split[0] + "' does not exist");
-            } else if (!plugin.isEnabled()) {
-                output.sendMessage("Could not set generator for world '" + world + "': Plugin '" + plugin.getDescription().getFullName() + "' is not enabled");
-            } else {
-                result = plugin.getDefaultWorldGenerator(world, id);
-            }
-        }
-
-        return result;
-    }
 }
