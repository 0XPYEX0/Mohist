--- ../src-base/minecraft/net/minecraftforge/fml/common/network/handshake/NetworkDispatcher.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/network/handshake/NetworkDispatcher.java
@@ -103,7 +103,7 @@
     public static final AttributeKey<Map<ResourceLocation, ForgeRegistry.Snapshot>> FML_GAMEDATA_SNAPSHOT = AttributeKey.valueOf("fml:gameDataSnapshot");
     public final NetworkManager manager;
     private final PlayerList scm;
-    private EntityPlayerMP player;
+    public EntityPlayerMP player;
     private ConnectionState state;
     private ConnectionType connectionType;
     private final Side side;
@@ -320,9 +320,9 @@
         kickWithMessage("This is modded. No modded response received. Bye!");
     }
 
-    private void kickWithMessage(String message)
+    public void kickWithMessage(String message)
     {
-        FMLLog.log.error("Network Disconnect: {}", message);
+        //FMLLog.log.info("Network Disconnect: {}", message);
         final TextComponentString TextComponentString = new TextComponentString(message);
         if (side == Side.CLIENT)
         {
@@ -427,6 +427,7 @@
             }
         }
         String channelName = msg.getChannelName();
+        player.getBukkitEntity().addChannel(channelName);
         if ("FML|HS".equals(channelName) || "REGISTER".equals(channelName) || "UNREGISTER".equals(channelName))
         {
             FMLProxyPacket proxy = new FMLProxyPacket(msg);
@@ -448,6 +449,9 @@
         else if (NetworkRegistry.INSTANCE.hasChannel(channelName, Side.SERVER))
         {
             FMLProxyPacket proxy = new FMLProxyPacket(msg);
+            byte[] data = new byte[msg.getBufferData().readableBytes()];
+            msg.getBufferData().readBytes(data);
+            serverHandler.getCraftServer().getMessenger().dispatchIncomingMessage(player.getBukkitEntity(), msg.getChannelName(), data);
             proxy.setDispatcher(this);
             context.fireChannelRead(proxy);
             return true;
@@ -597,7 +601,7 @@
             }
             else
             {
-                FMLLog.log.error("NetworkDispatcher exception", cause);
+                FMLLog.log.debug("NetworkDispatcher exception", cause);
             }
         }
         super.exceptionCaught(ctx, cause);
