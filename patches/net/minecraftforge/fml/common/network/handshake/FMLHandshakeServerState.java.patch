--- ../src-base/minecraft/net/minecraftforge/fml/common/network/handshake/FMLHandshakeServerState.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/network/handshake/FMLHandshakeServerState.java
@@ -19,6 +19,12 @@
 
 package net.minecraftforge.fml.common.network.handshake;
 
+import net.minecraft.entity.player.EntityPlayerMP;
+import red.mohist.api.PlayerAPI;
+import red.mohist.configuration.MohistConfig;
+import red.mohist.forge.MohistForgeUtils;
+import red.mohist.forge.ForgeVersion;
+import red.mohist.util.i18n.Message;
 import io.netty.channel.ChannelFutureListener;
 import io.netty.channel.ChannelHandlerContext;
 
@@ -59,14 +65,28 @@
             // Hello packet first
             if (msg instanceof FMLHandshakeMessage.ClientHello)
             {
-                FMLLog.log.info("Client protocol version {}", Integer.toHexString(((FMLHandshakeMessage.ClientHello)msg).protocolVersion()));
+                //FMLLog.log.info("Client protocol version {}", Integer.toHexString(((FMLHandshakeMessage.ClientHello)msg).protocolVersion()));
                 return;
             }
 
             FMLHandshakeMessage.ModList client = (FMLHandshakeMessage.ModList)msg;
             NetworkDispatcher dispatcher = ctx.channel().attr(NetworkDispatcher.FML_DISPATCHER).get();
+            EntityPlayerMP mp = dispatcher.player;
+            if (MohistForgeUtils.modsblacklist(client.modListAsString())) {
+                dispatcher.kickWithMessage(MohistConfig.instance.modsblacklistkickMessage.getValue());
+                return;
+            }
             dispatcher.setModList(client.modList());
-            FMLLog.log.info("Client attempting to join with {} mods : {}", client.modListSize(), client.modListAsString());
+            if (client.modListSize() > 0) {
+                PlayerAPI.mods.put(mp, client.modListSize());
+                PlayerAPI.modlist.put(mp, client.modListAsString());
+            }
+            if (!MohistConfig.instance.hideJoinModsList.getValue()) {
+                FMLLog.log.info(Message.getFormatString("client.join.mods", new Object[]{ client.modListSize() }) + " : " + client.modListAsString());
+            } else {
+                FMLLog.log.info(Message.getFormatString("client.join.mods", new Object[]{client.modListSize()}));
+            }
+
             String modRejections = FMLNetworkHandler.checkModList(client, Side.CLIENT);
             if (modRejections != null)
             {
@@ -91,6 +111,9 @@
                 while (itr.hasNext())
                 {
                     Entry<ResourceLocation, ForgeRegistry.Snapshot> e = itr.next();
+                    if ("minecraft:dataserializers".equals(e.getKey().toString()) && !ForgeVersion.isCompatibleLowForge(ctx.channel().attr(NetworkDispatcher.FML_DISPATCHER).get().getModList())){
+                        continue;
+                    }
                     ctx.writeAndFlush(new FMLHandshakeMessage.RegistryData(itr.hasNext(), e.getKey(), e.getValue())).addListener(ChannelFutureListener.FIRE_EXCEPTION_ON_FAILURE);
                 }
             }
