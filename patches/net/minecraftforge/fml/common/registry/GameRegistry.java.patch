--- ../src-base/minecraft/net/minecraftforge/fml/common/registry/GameRegistry.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/registry/GameRegistry.java
@@ -57,6 +57,7 @@
 import net.minecraftforge.fml.common.FMLLog;
 import net.minecraftforge.fml.common.IFuelHandler;
 import net.minecraftforge.fml.common.IWorldGenerator;
+import net.minecraftforge.fml.common.Loader;
 import net.minecraftforge.registries.GameData;
 import net.minecraftforge.registries.IForgeRegistry;
 import net.minecraftforge.registries.IForgeRegistryEntry;
@@ -79,6 +80,9 @@
     private static List<IWorldGenerator> sortedGeneratorList;
     private static List<IEntitySelectorFactory> entitySelectorFactories = Lists.newArrayList();
 
+    private static Map<String, Boolean> configWorldGenCache = Maps.newHashMap();
+    private static Map<String, String> worldGenMap = Maps.newHashMap();
+
     /**
      * Register a world generator - something that inserts new block types into the world
      *
@@ -88,12 +92,16 @@
      */
     public static void registerWorldGenerator(IWorldGenerator generator, int modGenerationWeight)
     {
+        String modId = Loader.instance().activeModContainer().getModId();
+        modId = modId.replaceAll("[^A-Za-z0-9]", "");
+        modId = modId.replace(" ", "_");
         worldGenerators.add(generator);
         worldGeneratorIndex.put(generator, modGenerationWeight);
         if (sortedGeneratorList != null)
         {
             sortedGeneratorList = null;
         }
+        worldGenMap.put(generator.getClass().getName(), modId);
     }
 
     /**
@@ -161,10 +169,21 @@
         long zSeed = fmlRandom.nextLong() >> 2 + 1L;
         long chunkSeed = (xSeed * chunkX + zSeed * chunkZ) ^ worldSeed;
 
-        for (IWorldGenerator generator : sortedGeneratorList)
+        for (IWorldGenerator generator : worldGenerators)
         {
-            fmlRandom.setSeed(chunkSeed);
-            generator.generate(fmlRandom, chunkX, chunkZ, world, chunkGenerator, chunkProvider);
+            if (!configWorldGenCache.containsKey(generator.getClass().getName()))
+            {
+                String modId = worldGenMap.get(generator.getClass().getName());
+                String generatorName = "";
+                generatorName = modId + "-" + generator.getClass().getSimpleName();
+                boolean generatorEnabled = world.mohistConfig.getBoolean("worldgen-" + generatorName, true);
+                configWorldGenCache.put(generator.getClass().getName(), generatorEnabled);
+            }
+            if (configWorldGenCache.get(generator.getClass().getName()))
+            {
+                fmlRandom.setSeed(chunkSeed);
+                generator.generate(fmlRandom, chunkX, chunkZ, world, chunkGenerator, chunkProvider);
+            }
         }
     }
 
