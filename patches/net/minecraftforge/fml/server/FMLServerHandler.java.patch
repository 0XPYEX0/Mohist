--- ../src-base/minecraft/net/minecraftforge/fml/server/FMLServerHandler.java
+++ ../src-work/minecraft/net/minecraftforge/fml/server/FMLServerHandler.java
@@ -19,13 +19,17 @@
 
 package net.minecraftforge.fml.server;
 
-import java.io.*;
+import com.google.common.collect.ImmutableList;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.io.InputStream;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Set;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
-
 import net.minecraft.network.INetHandler;
 import net.minecraft.network.NetHandlerPlayServer;
 import net.minecraft.network.NetworkManager;
@@ -46,9 +50,8 @@
 import net.minecraftforge.fml.common.network.FMLNetworkEvent;
 import net.minecraftforge.fml.relauncher.FMLLaunchHandler;
 import net.minecraftforge.fml.relauncher.Side;
-
-import com.google.common.collect.ImmutableList;
 import org.apache.commons.io.IOUtils;
+import red.mohist.util.i18n.Message;
 
 /**
  * Handles primary communication from hooked code into the system
@@ -172,8 +175,9 @@
         else
         {
             String text = query.getText() +
-                    "\n\nRun the command /fml confirm or or /fml cancel to proceed." +
-                    "\nAlternatively start the server with -Dfml.queryResult=confirm or -Dfml.queryResult=cancel to preselect the answer.";
+                    "\n\n" + Message.getString("forge.fmlserverhandler.1") +
+                    "\n" + Message.getString("forge.fmlserverhandler.2");
+
             FMLLog.log.warn(text);
 
             if (!query.isSynchronous()) return; // no-op until mc does commands in another thread (if ever)
@@ -192,22 +196,22 @@
                     for (Iterator<PendingCommand> it = dedServer.pendingCommandList.iterator(); it.hasNext(); )
                     {
                         String cmd = it.next().command.trim().toLowerCase();
-
-                        if (cmd.equals("/fml confirm"))
+                        cmd = cmd.charAt(0) == '/' ? cmd.substring(1) : cmd; // strip the forward slash to make it optional
+                        if (cmd.equals("fml confirm"))
                         {
-                            FMLLog.log.info("confirmed");
+                            FMLLog.log.info(Message.getString("forge.fmlserverhandler.3"));
                             query.setResult(true);
                             done = true;
                             it.remove();
                         }
-                        else if (cmd.equals("/fml cancel"))
+                        else if (cmd.equals("fml cancel"))
                         {
-                            FMLLog.log.info("cancelled");
+                            FMLLog.log.info(Message.getString("forge.fmlserverhandler.4"));
                             query.setResult(false);
                             done = true;
                             it.remove();
                         }
-                        else if (cmd.equals("/stop"))
+                        else if (cmd.equals("stop"))
                         {
                             StartupQuery.abort();
                         }
@@ -236,8 +240,8 @@
     @Override
     public void addModAsResource(ModContainer container)
     {
-        String langFile = "assets/" + container.getModId().toLowerCase() + "/lang/en_us.lang";
-        String langFile2 = "assets/" + container.getModId().toLowerCase() + "/lang/en_US.lang";
+        String langFile = "assets/" + container.getModId().toLowerCase() + "/lang/"+ Message.getLocale().toLowerCase() +".lang";
+        String langFile2 = "assets/" + container.getModId().toLowerCase() + "/lang/"+ Message.getLocale() +".lang";
         File source = container.getSource();
         InputStream stream = null;
         ZipFile zip = null;
@@ -265,7 +269,7 @@
         }
         catch (FileNotFoundException e)
         {
-            FMLLog.log.warn("Missing English translation for {}: {}", container.getModId(), e.getMessage());
+            FMLLog.log.debug("Missing English translation for {}: {}", container.getModId(), e.getMessage());
         }
         catch (IOException e)
         {
@@ -285,7 +289,7 @@
     @Override
     public String getCurrentLanguage()
     {
-        return "en_US";
+        return Message.getLocale();
     }
 
     @Override
