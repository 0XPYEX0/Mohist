--- ../src-base/minecraft/net/minecraft/enchantment/Enchantment.java
+++ ../src-work/minecraft/net/minecraft/enchantment/Enchantment.java
@@ -14,9 +14,9 @@
 import net.minecraft.util.text.TextFormatting;
 import net.minecraft.util.text.translation.I18n;
 
-public abstract class Enchantment
+public abstract class Enchantment extends net.minecraftforge.registries.IForgeRegistryEntry.Impl<Enchantment>
 {
-    public static final RegistryNamespaced<ResourceLocation, Enchantment> REGISTRY = new RegistryNamespaced<ResourceLocation, Enchantment>();
+    public static final RegistryNamespaced<ResourceLocation, Enchantment> REGISTRY = net.minecraftforge.registries.GameData.getWrapper(Enchantment.class);
     private final EntityEquipmentSlot[] applicableEquipmentTypes;
     private final Enchantment.Rarity rarity;
     @Nullable
@@ -134,7 +134,7 @@
 
     public boolean canApply(ItemStack stack)
     {
-        return this.type.canEnchantItem(stack.getItem());
+        return canApplyAtEnchantingTable(stack);
     }
 
     public void onEntityDamaged(EntityLivingBase user, Entity target, int level)
@@ -155,6 +155,26 @@
         return false;
     }
 
+    /**
+     * This applies specifically to applying at the enchanting table. The other method {@link #canApply(ItemStack)}
+     * applies for <i>all possible</i> enchantments.
+     * @param stack
+     * @return
+     */
+    public boolean canApplyAtEnchantingTable(ItemStack stack)
+    {
+        return stack.getItem().canApplyAtEnchantingTable(stack, this);
+    }
+
+    /**
+     * Is this enchantment allowed to be enchanted on books via Enchantment Table
+     * @return false to disable the vanilla feature
+     */
+    public boolean isAllowedOnBooks()
+    {
+        return true;
+    }
+
     public static void registerEnchantments()
     {
         EntityEquipmentSlot[] aentityequipmentslot = new EntityEquipmentSlot[] {EntityEquipmentSlot.HEAD, EntityEquipmentSlot.CHEST, EntityEquipmentSlot.LEGS, EntityEquipmentSlot.FEET};
