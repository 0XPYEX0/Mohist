--- ../src-base/minecraft/net/minecraft/client/settings/GameSettings.java
+++ ../src-work/minecraft/net/minecraft/client/settings/GameSettings.java
@@ -165,6 +165,7 @@
 
     public GameSettings(Minecraft mcIn, File mcDataDir)
     {
+        setForgeKeybindProperties();
         this.keyBindings = (KeyBinding[])ArrayUtils.addAll(new KeyBinding[] {this.keyBindAttack, this.keyBindUseItem, this.keyBindForward, this.keyBindLeft, this.keyBindBack, this.keyBindRight, this.keyBindJump, this.keyBindSneak, this.keyBindSprint, this.keyBindDrop, this.keyBindInventory, this.keyBindChat, this.keyBindPlayerList, this.keyBindPickBlock, this.keyBindCommand, this.keyBindScreenshot, this.keyBindTogglePerspective, this.keyBindSmoothCamera, this.keyBindFullscreen, this.keyBindSpectatorOutlines, this.keyBindSwapHands, this.keyBindSaveToolbar, this.keyBindLoadToolbar, this.keyBindAdvancements}, this.keyBindsHotbar);
         this.difficulty = EnumDifficulty.NORMAL;
         this.lastServer = "";
@@ -188,6 +189,7 @@
 
     public GameSettings()
     {
+        setForgeKeybindProperties();
         this.keyBindings = (KeyBinding[])ArrayUtils.addAll(new KeyBinding[] {this.keyBindAttack, this.keyBindUseItem, this.keyBindForward, this.keyBindLeft, this.keyBindBack, this.keyBindRight, this.keyBindJump, this.keyBindSneak, this.keyBindSprint, this.keyBindDrop, this.keyBindInventory, this.keyBindChat, this.keyBindPlayerList, this.keyBindPickBlock, this.keyBindCommand, this.keyBindScreenshot, this.keyBindTogglePerspective, this.keyBindSmoothCamera, this.keyBindFullscreen, this.keyBindSpectatorOutlines, this.keyBindSwapHands, this.keyBindSaveToolbar, this.keyBindLoadToolbar, this.keyBindAdvancements}, this.keyBindsHotbar);
         this.difficulty = EnumDifficulty.NORMAL;
         this.lastServer = "";
@@ -299,7 +301,7 @@
                 this.mc.getTextureMapBlocks().setMipmapLevels(this.mipmapLevels);
                 this.mc.getTextureManager().bindTexture(TextureMap.LOCATION_BLOCKS_TEXTURE);
                 this.mc.getTextureMapBlocks().setBlurMipmapDirect(false, this.mipmapLevels > 0);
-                this.mc.scheduleResourcesRefresh();
+                this.needsBlockModelRefresh = true; // FORGE: fix for MC-64581 very laggy mipmap slider
             }
         }
 
@@ -361,7 +363,7 @@
         if (settingsOption == GameSettings.Options.ANAGLYPH)
         {
             this.anaglyph = !this.anaglyph;
-            this.mc.refreshResources();
+            net.minecraftforge.fml.client.FMLClientHandler.instance().refreshResources(net.minecraftforge.client.resource.VanillaResourceType.TEXTURES);
         }
 
         if (settingsOption == GameSettings.Options.GRAPHICS)
@@ -724,6 +726,7 @@
 
     public void loadOptions()
     {
+        FileInputStream fileInputStream = null; // Forge: fix MC-151173
         try
         {
             if (!this.optionsFile.exists())
@@ -732,7 +735,7 @@
             }
 
             this.soundLevels.clear();
-            List<String> list = IOUtils.readLines(new FileInputStream(this.optionsFile));
+            List<String> list = IOUtils.readLines(fileInputStream = new FileInputStream(this.optionsFile), StandardCharsets.UTF_8); // Forge: fix MC-117449, MC-151173
             NBTTagCompound nbttagcompound = new NBTTagCompound();
 
             for (String s : list)
@@ -1068,7 +1071,12 @@
                     {
                         if (s1.equals("key_" + keybinding.getKeyDescription()))
                         {
-                            keybinding.setKeyCode(Integer.parseInt(s2));
+                            if (s2.indexOf(':') != -1)
+                            {
+                                String[] t = s2.split(":");
+                                keybinding.setKeyModifierAndCode(net.minecraftforge.client.settings.KeyModifier.valueFromString(t[1]), Integer.parseInt(t[0]));
+                            } else
+                            keybinding.setKeyModifierAndCode(net.minecraftforge.client.settings.KeyModifier.NONE, Integer.parseInt(s2));
                         }
                     }
 
@@ -1100,6 +1108,7 @@
         {
             LOGGER.error("Failed to load options", (Throwable)exception);
         }
+        finally { IOUtils.closeQuietly(fileInputStream); } // Forge: fix MC-151173
     }
 
     private NBTTagCompound dataFix(NBTTagCompound p_189988_1_)
@@ -1132,6 +1141,7 @@
 
     public void saveOptions()
     {
+        if (net.minecraftforge.fml.client.FMLClientHandler.instance().isLoading()) return;
         PrintWriter printwriter = null;
 
         try
@@ -1206,7 +1216,8 @@
 
             for (KeyBinding keybinding : this.keyBindings)
             {
-                printwriter.println("key_" + keybinding.getKeyDescription() + ":" + keybinding.getKeyCode());
+                String keyString = "key_" + keybinding.getKeyDescription() + ":" + keybinding.getKeyCode();
+                printwriter.println(keybinding.getKeyModifier() != net.minecraftforge.client.settings.KeyModifier.NONE ? keyString + ":" + keybinding.getKeyModifier() : keyString);
             }
 
             for (SoundCategory soundcategory : SoundCategory.values())
@@ -1440,4 +1451,35 @@
             return value;
         }
     }
+
+    /******* Forge Start ***********/
+    private void setForgeKeybindProperties() {
+        net.minecraftforge.client.settings.KeyConflictContext inGame = net.minecraftforge.client.settings.KeyConflictContext.IN_GAME;
+        keyBindForward.setKeyConflictContext(inGame);
+        keyBindLeft.setKeyConflictContext(inGame);
+        keyBindBack.setKeyConflictContext(inGame);
+        keyBindRight.setKeyConflictContext(inGame);
+        keyBindJump.setKeyConflictContext(inGame);
+        keyBindSneak.setKeyConflictContext(inGame);
+        keyBindSprint.setKeyConflictContext(inGame);
+        keyBindAttack.setKeyConflictContext(inGame);
+        keyBindChat.setKeyConflictContext(inGame);
+        keyBindPlayerList.setKeyConflictContext(inGame);
+        keyBindCommand.setKeyConflictContext(inGame);
+        keyBindTogglePerspective.setKeyConflictContext(inGame);
+        keyBindSmoothCamera.setKeyConflictContext(inGame);
+        keyBindSwapHands.setKeyConflictContext(inGame);
+    }
+
+    // FORGE: fix for MC-64581 very laggy mipmap slider
+    private boolean needsBlockModelRefresh = false;
+    public void onGuiClosed()
+    {
+        if (needsBlockModelRefresh)
+        {
+            net.minecraftforge.fml.client.FMLClientHandler.instance().scheduleResourcesRefresh(net.minecraftforge.client.resource.VanillaResourceType.MODELS);
+            this.needsBlockModelRefresh = false;
+        }
+    }
+    /******* Forge End ***********/
 }
