--- ../src-base/minecraft/net/minecraft/nbt/NBTTagCompound.java
+++ ../src-work/minecraft/net/minecraft/nbt/NBTTagCompound.java
@@ -1,12 +1,13 @@
 package net.minecraft.nbt;
 
 import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
 import java.io.DataInput;
 import java.io.DataOutput;
 import java.io.IOException;
 import java.util.Collection;
 import java.util.Collections;
+import java.util.HashMap;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Objects;
@@ -25,12 +26,17 @@
 {
     private static final Logger LOGGER = LogManager.getLogger();
     private static final Pattern SIMPLE_VALUE = Pattern.compile("[A-Za-z0-9._+-]+");
-    private final Map<String, NBTBase> tagMap = Maps.<String, NBTBase>newHashMap();
+    private final Map<String, NBTBase> tagMap = new HashMap<>();
 
+    public void write0(DataOutput output)  throws IOException
+    {
+        write(output);
+    }
+
     void write(DataOutput output) throws IOException
     {
-        for (String s : this.tagMap.keySet())
-        {
+        for (Iterator<String> iterator = this.tagMap.keySet().iterator(); iterator.hasNext(); ) {
+            String s = iterator.next();
             NBTBase nbtbase = this.tagMap.get(s);
             writeEntry(s, nbtbase, output);
         }
@@ -38,6 +44,11 @@
         output.writeByte(0);
     }
 
+    public void read0(DataInput input, int depth, NBTSizeTracker sizeTracker) throws IOException
+    {
+        read(input, depth,sizeTracker);
+    }
+
     void read(DataInput input, int depth, NBTSizeTracker sizeTracker) throws IOException
     {
         sizeTracker.read(384L);
