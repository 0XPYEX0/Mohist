--- ../src-base/minecraft/net/minecraft/world/WorldServerMulti.java
+++ ../src-work/minecraft/net/minecraft/world/WorldServerMulti.java
@@ -7,16 +7,24 @@
 import net.minecraft.world.border.WorldBorder;
 import net.minecraft.world.storage.DerivedWorldInfo;
 import net.minecraft.world.storage.ISaveHandler;
+import net.minecraft.world.storage.WorldInfo;
 
 public class WorldServerMulti extends WorldServer
 {
     private final WorldServer delegate;
+    private IBorderListener borderListener;
 
+    public WorldServerMulti(MinecraftServer server, ISaveHandler saveHandlerIn, int dimensionId, WorldServer delegate, Profiler profilerIn, WorldInfo worldData, org.bukkit.World.Environment env, org.bukkit.generator.ChunkGenerator gen)
+    {
+        super(server, saveHandlerIn, worldData, dimensionId, profilerIn, env, gen);
+        this.delegate = delegate;
+    }
+
     public WorldServerMulti(MinecraftServer server, ISaveHandler saveHandlerIn, int dimensionId, WorldServer delegate, Profiler profilerIn)
     {
         super(server, saveHandlerIn, new DerivedWorldInfo(delegate.getWorldInfo()), dimensionId, profilerIn);
         this.delegate = delegate;
-        delegate.getWorldBorder().addListener(new IBorderListener()
+        this.borderListener = new IBorderListener()
         {
             public void onSizeChanged(WorldBorder border, double newSize)
             {
@@ -46,13 +54,10 @@
             {
                 WorldServerMulti.this.getWorldBorder().setDamageBuffer(newSize);
             }
-        });
+        };
+        this.delegate.getWorldBorder().addListener(this.borderListener);
     }
 
-    protected void saveLevel() throws MinecraftException
-    {
-    }
-
     public World init()
     {
         this.mapStorage = this.delegate.getMapStorage();
@@ -60,12 +65,12 @@
         this.lootTable = this.delegate.getLootTableManager();
         this.advancementManager = this.delegate.getAdvancementManager();
         String s = VillageCollection.fileNameForProvider(this.provider);
-        VillageCollection villagecollection = (VillageCollection)this.mapStorage.getOrLoadData(VillageCollection.class, s);
+        VillageCollection villagecollection = (VillageCollection)this.perWorldStorage.getOrLoadData(VillageCollection.class, s);
 
         if (villagecollection == null)
         {
             this.villageCollection = new VillageCollection(this);
-            this.mapStorage.setData(s, this.villageCollection);
+            this.perWorldStorage.setData(s, this.villageCollection);
         }
         else
         {
@@ -73,9 +78,19 @@
             this.villageCollection.setWorldsForAll(this);
         }
 
-        return this;
+        this.initCapabilities();
+        // return this;
+        return super.init(); // CraftBukkit
     }
 
+
+    @Override
+    public void flush()
+    {
+        super.flush();
+        this.delegate.getWorldBorder().removeListener(this.borderListener); // Unlink ourselves, to prevent world leak.
+    }
+
     public void saveAdditionalData()
     {
         this.provider.onWorldSave();
