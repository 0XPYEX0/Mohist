--- ../src-base/minecraft/net/minecraft/block/BlockTrapDoor.java
+++ ../src-work/minecraft/net/minecraft/block/BlockTrapDoor.java
@@ -24,6 +24,7 @@
 import net.minecraft.world.World;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockTrapDoor extends Block
 {
@@ -130,6 +131,18 @@
 
             if (flag || blockIn.getDefaultState().canProvidePower())
             {
+                org.bukkit.World bworld = worldIn.getWorld();
+                org.bukkit.block.Block bblock = bworld.getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+
+                int power = bblock.getBlockPower();
+                int oldPower = state.getValue(OPEN) ? 15 : 0;
+
+                if (oldPower == 0 ^ power == 0 || blockIn.getDefaultState().hasComparatorInputOverride()) {
+                    BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(bblock, oldPower, power);
+                    worldIn.getServer().getPluginManager().callEvent(eventRedstone);
+                    flag = eventRedstone.getNewCurrent() > 0;
+                }
+
                 boolean flag1 = ((Boolean)state.getValue(OPEN)).booleanValue();
 
                 if (flag1 != flag)
@@ -250,6 +263,18 @@
         return (face == EnumFacing.UP && state.getValue(HALF) == BlockTrapDoor.DoorHalf.TOP || face == EnumFacing.DOWN && state.getValue(HALF) == BlockTrapDoor.DoorHalf.BOTTOM) && !((Boolean)state.getValue(OPEN)).booleanValue() ? BlockFaceShape.SOLID : BlockFaceShape.UNDEFINED;
     }
 
+    @Override
+    public boolean isLadder(IBlockState state, IBlockAccess world, BlockPos pos, EntityLivingBase entity)
+    {
+        if (state.getValue(OPEN))
+        {
+            IBlockState down = world.getBlockState(pos.down());
+            if (down.getBlock() == net.minecraft.init.Blocks.LADDER)
+                return down.getValue(BlockLadder.FACING) == state.getValue(FACING);
+        }
+        return false;
+    }
+
     public static enum DoorHalf implements IStringSerializable
     {
         TOP("top"),
