--- ../src-base/minecraft/net/minecraft/block/BlockRedstoneWire.java
+++ ../src-work/minecraft/net/minecraft/block/BlockRedstoneWire.java
@@ -31,6 +31,7 @@
 import net.minecraft.world.World;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockRedstoneWire extends Block
 {
@@ -99,15 +100,15 @@
         BlockPos blockpos = pos.offset(direction);
         IBlockState iblockstate = worldIn.getBlockState(pos.offset(direction));
 
-        if (!canConnectTo(worldIn.getBlockState(blockpos), direction) && (iblockstate.isNormalCube() || !canConnectUpwardsTo(worldIn.getBlockState(blockpos.down()))))
+        if (!canConnectTo(worldIn.getBlockState(blockpos), direction, worldIn, blockpos) && (iblockstate.isNormalCube() || !canConnectUpwardsTo(worldIn, blockpos.down())))
         {
             IBlockState iblockstate1 = worldIn.getBlockState(pos.up());
 
             if (!iblockstate1.isNormalCube())
             {
-                boolean flag = worldIn.getBlockState(blockpos).isTopSolid() || worldIn.getBlockState(blockpos).getBlock() == Blocks.GLOWSTONE;
+                boolean flag = worldIn.getBlockState(blockpos).isSideSolid(worldIn, blockpos, EnumFacing.UP) || worldIn.getBlockState(blockpos).getBlock() == Blocks.GLOWSTONE;
 
-                if (flag && canConnectUpwardsTo(worldIn.getBlockState(blockpos.up())))
+                if (flag && canConnectUpwardsTo(worldIn, blockpos.up()))
                 {
                     if (iblockstate.isBlockNormalCube())
                     {
@@ -144,7 +145,8 @@
 
     public boolean canPlaceBlockAt(World worldIn, BlockPos pos)
     {
-        return worldIn.getBlockState(pos.down()).isTopSolid() || worldIn.getBlockState(pos.down()).getBlock() == Blocks.GLOWSTONE;
+        IBlockState downState = worldIn.getBlockState(pos.down());
+        return downState.isTopSolid() || downState.getBlockFaceShape(worldIn, pos.down(), EnumFacing.UP) == BlockFaceShape.SOLID || worldIn.getBlockState(pos.down()).getBlock() == Blocks.GLOWSTONE;
     }
 
     private IBlockState updateSurroundingRedstone(World worldIn, BlockPos pos, IBlockState state)
@@ -219,6 +221,12 @@
             j = k;
         }
 
+        if (i != j) {
+            BlockRedstoneEvent event = new BlockRedstoneEvent(worldIn.getWorld().getBlockAt(pos1.getX(), pos1.getY(), pos1.getZ()), i, j);
+            worldIn.getServer().getPluginManager().callEvent(event);
+            j = event.getNewCurrent();
+        }
+
         if (i != j)
         {
             state = state.withProperty(POWER, Integer.valueOf(j));
@@ -318,7 +326,7 @@
         }
     }
 
-    private int getMaxCurrentStrength(World worldIn, BlockPos pos, int strength)
+    public int getMaxCurrentStrength(World worldIn, BlockPos pos, int strength)
     {
         if (worldIn.getBlockState(pos).getBlock() != this)
         {
@@ -414,7 +422,7 @@
         {
             return true;
         }
-        else if (canConnectTo(iblockstate, side))
+        else if (canConnectTo(iblockstate, side, worldIn, pos))
         {
             return true;
         }
@@ -430,16 +438,11 @@
 
     protected static boolean canConnectUpwardsTo(IBlockAccess worldIn, BlockPos pos)
     {
-        return canConnectUpwardsTo(worldIn.getBlockState(pos));
+        return canConnectTo(worldIn.getBlockState(pos), null, worldIn, pos);
     }
 
-    protected static boolean canConnectUpwardsTo(IBlockState state)
+    protected static boolean canConnectTo(IBlockState blockState, @Nullable EnumFacing side, IBlockAccess world, BlockPos pos)
     {
-        return canConnectTo(state, (EnumFacing)null);
-    }
-
-    protected static boolean canConnectTo(IBlockState blockState, @Nullable EnumFacing side)
-    {
         Block block = blockState.getBlock();
 
         if (block == Blocks.REDSTONE_WIRE)
@@ -457,7 +460,7 @@
         }
         else
         {
-            return blockState.canProvidePower() && side != null;
+            return blockState.getBlock().canConnectRedstone(blockState, world, pos, side);
         }
     }
 
