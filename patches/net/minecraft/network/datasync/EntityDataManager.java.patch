--- ../src-base/minecraft/net/minecraft/network/datasync/EntityDataManager.java
+++ ../src-work/minecraft/net/minecraft/network/datasync/EntityDataManager.java
@@ -4,6 +4,7 @@
 import com.google.common.collect.Maps;
 import io.netty.handler.codec.DecoderException;
 import io.netty.handler.codec.EncoderException;
+import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
 import java.io.IOException;
 import java.util.List;
 import java.util.Map;
@@ -26,7 +27,7 @@
     private static final Logger LOGGER = LogManager.getLogger();
     private static final Map < Class <? extends Entity > , Integer > NEXT_ID_MAP = Maps. < Class <? extends Entity > , Integer > newHashMap();
     private final Entity entity;
-    private final Map < Integer, EntityDataManager.DataEntry<? >> entries = Maps. < Integer, EntityDataManager.DataEntry<? >> newHashMap();
+    private final Map < Integer, EntityDataManager.DataEntry<? >> entries = new Int2ObjectOpenHashMap<>(); // Paper
     private final ReadWriteLock lock = new ReentrantReadWriteLock();
     private boolean empty = true;
     private boolean dirty;
@@ -38,7 +39,7 @@
 
     public static <T> DataParameter<T> createKey(Class <? extends Entity > clazz, DataSerializer<T> serializer)
     {
-        if (LOGGER.isDebugEnabled())
+        if (true || LOGGER.isDebugEnabled()) //Forge: This is very useful for mods that register keys on classes that are not their own
         {
             try
             {
@@ -46,7 +47,9 @@
 
                 if (!oclass.equals(clazz))
                 {
-                    LOGGER.debug("defineId called for: {} from {}", clazz, oclass, new RuntimeException());
+                    //Forge: log at warn, mods should not add to classes that they don't own, and only add stacktrace when in debug is enabled as it is mostly not needed and consumes time
+                    if (LOGGER.isDebugEnabled()) LOGGER.warn("defineId called for: {} from {}", clazz, oclass, new RuntimeException());
+                    else LOGGER.warn("defineId called for: {} from {}", clazz, oclass);
                 }
             }
             catch (ClassNotFoundException var5)
