--- ../src-base/minecraft/net/minecraft/util/registry/RegistryNamespaced.java
+++ ../src-work/minecraft/net/minecraft/util/registry/RegistryNamespaced.java
@@ -2,11 +2,20 @@
 
 import com.google.common.collect.BiMap;
 import com.google.common.collect.HashBiMap;
+import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Iterator;
+import java.util.List;
 import java.util.Map;
 import javax.annotation.Nullable;
+import net.minecraft.entity.Entity;
 import net.minecraft.util.IObjectIntIterable;
 import net.minecraft.util.IntIdentityHashBiMap;
+import net.minecraft.util.ResourceLocation;
+import net.minecraftforge.fml.common.registry.EntityEntry;
+import net.minecraftforge.fml.common.registry.EntityRegistry;
+import net.minecraftforge.fml.common.registry.ForgeRegistries;
+import net.minecraftforge.registries.GameData;
 
 public class RegistryNamespaced<K, V> extends RegistrySimple<K, V> implements IObjectIntIterable<V>
 {
@@ -32,33 +41,45 @@
     @Nullable
     public V getObject(@Nullable K name)
     {
-        return (V)super.getObject(name);
+        EntityEntry entityEntry = ForgeRegistries.ENTITIES.getValue((ResourceLocation) name);
+        return entityEntry == null ? (V)super.getObject(name) : (V) entityEntry.getEntityClass();
     }
 
     @Nullable
     public K getNameForObject(V value)
     {
-        return this.inverseObjectRegistry.get(value);
+        EntityEntry entityEntry = EntityRegistry.getEntry((Class<? extends Entity>) value);
+        return entityEntry == null ? this.inverseObjectRegistry.get(value) : (K) entityEntry.getRegistryName();
     }
 
     public boolean containsKey(K key)
     {
-        return super.containsKey(key);
+        return ForgeRegistries.ENTITIES.getValue((ResourceLocation) key) != null || super.containsKey(key);
     }
 
     public int getIDForObject(@Nullable V value)
     {
-        return this.underlyingIntegerMap.getId(value);
+        EntityEntry entityEntry = EntityRegistry.getEntry((Class<? extends Entity>) value);
+        return  entityEntry == null ? this.underlyingIntegerMap.getId(value) : GameData.getEntityRegistry().getID(entityEntry);
     }
 
     @Nullable
     public V getObjectById(int id)
     {
-        return this.underlyingIntegerMap.get(id);
+        EntityEntry entityEntry = net.minecraftforge.registries.GameData.getEntityRegistry().getValue(id);
+        return entityEntry == null ? this.underlyingIntegerMap.get(id) : (V) entityEntry;
     }
 
     public Iterator<V> iterator()
     {
-        return this.underlyingIntegerMap.iterator();
+        Collection<V> collection  = new ArrayList<>();
+        for (EntityEntry value : GameData.getEntityRegistry().getValuesCollection()) {
+            collection.add((V) value);
+        }
+        for (Iterator<V> it = this.underlyingIntegerMap.iterator(); it.hasNext(); ) {
+            V value = it.next();
+            collection.add(value);
+        }
+        return collection.iterator();
     }
 }
