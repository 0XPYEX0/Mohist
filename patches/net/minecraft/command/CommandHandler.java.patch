--- ../src-base/minecraft/net/minecraft/command/CommandHandler.java
+++ ../src-work/minecraft/net/minecraft/command/CommandHandler.java
@@ -16,6 +16,10 @@
 import net.minecraft.util.text.TextFormatting;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.command.CommandWrapper;
+import org.bukkit.craftbukkit.v1_12_R1.command.CraftSimpleCommandMap;
+import org.bukkit.craftbukkit.v1_12_R1.command.ModCustomCommand;
+import red.mohist.util.i18n.Message;
 
 public abstract class CommandHandler implements ICommandManager
 {
@@ -27,15 +31,11 @@
     {
         rawCommand = rawCommand.trim();
 
-        if (rawCommand.startsWith("/"))
-        {
-            rawCommand = rawCommand.substring(1);
-        }
-
         String[] astring = rawCommand.split(" ");
         String s = astring[0];
         astring = dropFirstString(astring);
         ICommand icommand = this.commandMap.get(s);
+        if (icommand == null) icommand = CommandWrapper.toNMSCommand(sender, s);
         int i = 0;
 
         try
@@ -50,6 +50,17 @@
             }
             else if (icommand.checkPermission(this.getServer(), sender))
             {
+                net.minecraftforge.event.CommandEvent event = new net.minecraftforge.event.CommandEvent(icommand, sender, astring);
+                if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event))
+                {
+                    if (event.getException() != null)
+                    {
+                        com.google.common.base.Throwables.throwIfUnchecked(event.getException());
+                    }
+                    return 1;
+                }
+                if (event.getParameters() != null) astring = event.getParameters();
+
                 if (j > -1)
                 {
                     List<Entity> list = EntitySelector.<Entity>matchEntities(sender, astring[j], Entity.class);
@@ -135,16 +146,20 @@
 
     public ICommand registerCommand(ICommand command)
     {
+        List<String> list = command.getAliases();
         this.commandMap.put(command.getName(), command);
         this.commandSet.add(command);
-
-        for (String s : command.getAliases())
-        {
-            ICommand icommand = this.commandMap.get(s);
-
-            if (icommand == null || !icommand.getName().equals(s))
-            {
-                this.commandMap.put(s, command);
+        // register vanilla commands with Bukkit to support permissions.
+        CraftSimpleCommandMap commandMap = MinecraftServer.getServerInst().server.getCraftCommandMap();
+        ModCustomCommand customCommand = new ModCustomCommand(command.getName());
+        if (list != null) customCommand.setAliases(list);
+        commandMap.register(command.getName(), customCommand);
+        if (list != null) {
+            for (String s : list) {
+                ICommand icommand = (ICommand)this.commandMap.get(s);
+                if (icommand == null || !icommand.getName().equals(s)) {
+                    this.commandMap.put(s, command);
+                }
             }
         }
 
